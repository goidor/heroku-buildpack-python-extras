#!/usr/bin/env bash

PYTHON_SRC_DIR="$HEROKU_DIR/python/src"
PIP_VERSION=${PIP_VERSION:-"6.1.1"}
PIP_SRC_DIR="$HEROKU_DIR/src/pip"
SETUPTOOLS_VERSION=${SETUPTOOLS_VERSION:-"2.2"}
SETUPTOOLS_SRC_DIR="$HEROKU_DIR/src/setuptools"

# If Pip isn't up to date:
if [ "$FRESH_PYTHON" ] || [[ ! $(pip --version) == *$PIP_VERSION* ]]; then
    set +e
    WORKING_DIR=$(pwd)

    # Prepare it for the real world
    puts_step "Installing setuptools ($SETUPTOOLS_VERSION)"
    download_s3_package heroku-buildpack-python-extras setuptools "$SETUPTOOLS_VERSION" "$SETUPTOOLS_SRC_DIR"
    cd "$SETUPTOOLS_SRC_DIR"
    python setup.py install &> /dev/null
    rm -rf "$SETUPTOOLS_SRC_DIR"
    cd "$WORKING_DIR"

    puts_step "Installing pip ($PIP_VERSION)"
    download_s3_package heroku-buildpack-python-extras pip "$PIP_VERSION" "$PIP_SRC_DIR"
    cd "$PIP_SRC_DIR"
    python setup.py install &> /dev/null
    rm -rf "$PIP_SRC_DIR"
    cd "$WORKING_DIR"
    set -e
    hash -r
fi

# If no requirements given, assume `setup.py develop`.
if [ ! -f requirements.txt ]; then
    puts_step "No requirements.txt provided; assuming dist package."
    echo "-e ." > requirements.txt
fi

# Install Mercurial if it appears to be required.
if (grep -Fiq "hg+" requirements.txt) then
    pip install --use-mirrors mercurial | cleanup_pip | indent
fi

# Install dependencies with Pip.
puts_step "Installing dependencies using pip ($PIP_VERSION)"
pip install -r requirements.txt --exists-action=w --src="$PYTHON_SRC_DIR" | cleanup_pip | indent
